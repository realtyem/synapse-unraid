name: Complement Tests

on:
  workflow_dispatch:
  push:
    branches: ["exp/extended-complement", "dependabot/*"]
  schedule:
    - cron: 0 4 * * *
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  calculate-test-jobs:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - id: get-matrix
        run: .ci/scripts/calculate_complement_jobs.py
    outputs:
#      complement_nuclear_test_matrix: ${{ steps.get-matrix.outputs.complement_nuclear_test_matrix}}
      complement_sharding_test_matrix: ${{ steps.get-matrix.outputs.complement_sharding_test_matrix}}
      complement_singles_test_matrix: ${{ steps.get-matrix.outputs.complement_singles_test_matrix}}
      complement_stream_writers_test_matrix: ${{ steps.get-matrix.outputs.complement_stream_writers_test_matrix}}

  singles:
    runs-on: ubuntu-latest
    needs: calculate-test-jobs
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.calculate-test-jobs.outputs.complement_singles_test_matrix) }}

    steps:
      - name: Run actions/checkout@v3 for synapse
        uses: actions/checkout@v3
        with:
          path: synapse

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.58.1
            override: true
      - uses: Swatinem/rust-cache@v2

      - name: Prepare Complement's Prerequisites
        run: synapse/.ci/scripts/setup_complement_prerequisites.sh

      - shell: bash
        name: Run Complement Tests
        env:
          POSTGRES: "true"
          WORKERS: "true"
          SYNAPSE_WORKER_TYPES: ${{ matrix.job.worker_types }}
        run: |
          set -o pipefail
          COMPLEMENT_DIR=`pwd`/complement synapse/scripts-dev/complement-extended.sh -json 2>&1 | synapse/.ci/scripts/gotestfmt

  singles_with_metrics:
    runs-on: ubuntu-latest
    needs: calculate-test-jobs
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.calculate-test-jobs.outputs.complement_singles_test_matrix) }}

    steps:
      - name: Run actions/checkout@v3 for synapse
        uses: actions/checkout@v3
        with:
          path: synapse

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.58.1
            override: true
      - uses: Swatinem/rust-cache@v2

      - name: Prepare Complement's Prerequisites
        run: synapse/.ci/scripts/setup_complement_prerequisites.sh

      - shell: bash
        name: Run Complement Tests
        env:
          POSTGRES: "true"
          WORKERS: "true"
          SYNAPSE_METRICS: "true"
          SYNAPSE_WORKER_TYPES: ${{ matrix.job.worker_types }}
        run: |
          set -o pipefail
          COMPLEMENT_DIR=`pwd`/complement synapse/scripts-dev/complement-extended.sh -json 2>&1 | synapse/.ci/scripts/gotestfmt

  stage_one_done:
    if: ${{ !cancelled() }} # Run this even if prior jobs were skipped
    runs-on: ubuntu-latest
    needs:
      - singles
      - singles_with_metrics
    steps:
      - run: "true"
#      - uses: matrix-org/done-action@v2
#        with:
#          needs: ${{ toJSON(needs) }}

  sharding:
    runs-on: ubuntu-latest
    needs: stage_one_done
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.calculate-test-jobs.outputs.complement_sharding_test_matrix) }}

    steps:
      - name: Run actions/checkout@v3 for synapse
        uses: actions/checkout@v3
        with:
          path: synapse

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.58.1
            override: true
      - uses: Swatinem/rust-cache@v2

      - name: Prepare Complement's Prerequisites
        run: synapse/.ci/scripts/setup_complement_prerequisites.sh

      - shell: bash
        name: Run Complement Tests
        env:
          POSTGRES: "true"
          WORKERS: "true"
          SYNAPSE_WORKER_TYPES: ${{ matrix.job.worker_types }}
        run: |
          set -o pipefail
          COMPLEMENT_DIR=`pwd`/complement synapse/scripts-dev/complement-extended.sh -json 2>&1 | synapse/.ci/scripts/gotestfmt

  stream_writers:
    runs-on: ubuntu-latest
    needs: stage_one_done
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.calculate-test-jobs.outputs.complement_stream_writers_test_matrix) }}

    steps:
      - name: Run actions/checkout@v3 for synapse
        uses: actions/checkout@v3
        with:
          path: synapse

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.58.1
            override: true
      - uses: Swatinem/rust-cache@v2

      - name: Prepare Complement's Prerequisites
        run: synapse/.ci/scripts/setup_complement_prerequisites.sh

      - shell: bash
        name: Run Complement Tests
        env:
          POSTGRES: "true"
          WORKERS: "true"
          SYNAPSE_WORKER_TYPES: ${{ matrix.job.worker_types }}
        run: |
          set -o pipefail
          COMPLEMENT_DIR=`pwd`/complement synapse/scripts-dev/complement-extended.sh -json 2>&1 | synapse/.ci/scripts/gotestfmt

  nuclear:
    runs-on: ubuntu-latest
    needs: stage_one_done
    strategy:
      fail-fast: false
      matrix:
        job: ${{ fromJson(needs.calculate-test-jobs.outputs.complement_nuclear_test_matrix) }}

    steps:
      - name: Run actions/checkout@v3 for synapse
        uses: actions/checkout@v3
        with:
          path: synapse

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.58.1
            override: true
      - uses: Swatinem/rust-cache@v2

      - name: Prepare Complement's Prerequisites
        run: synapse/.ci/scripts/setup_complement_prerequisites.sh

      - shell: bash
        name: Run Complement Tests
        env:
          POSTGRES: "true"
          WORKERS: "true"
          SYNAPSE_WORKER_TYPES: ${{ matrix.job.worker_types }}
        run: |
          set -o pipefail
          COMPLEMENT_DIR=`pwd`/complement synapse/scripts-dev/complement-extended.sh -json 2>&1 | synapse/.ci/scripts/gotestfmt

  # a job which marks all the other jobs as complete, and only pings my phone on error.
  tests-done:
    if: ${{ always() }}
    needs:
#      - nuclear
      - sharding
      - stage_one_done
      - stream_writers
    runs-on: ubuntu-22.04
    steps:
      - uses: matrix-org/done-action@v2
        with:
          needs: ${{ toJSON(needs) }}
